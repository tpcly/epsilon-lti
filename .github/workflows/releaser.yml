name: Release
on:
    push:
        branches:
            - 'release/[0-9].[0-9].[0-9]'
            - 'release/[0-9].[0-9].[0-9]-beta.[0-9][0-9]'
    pull_request:
        types:
            - closed
        branches:
            - 'release/[0-9].[0-9].[0-9]'
            - 'release/[0-9].[0-9].[0-9]-beta.[0-9][0-9]'
env:
    CURRENT_BRANCH: ${{ github.ref }}
    FRONTEND_LOCATION: 'Epsilon.Host.Frontend/'
jobs:
    collect-version:
        name: Collect version
        runs-on: ubuntu-latest
        permissions:
            contents: read
        outputs:
            APP_VERSION: ${{ steps.extract-version.outputs.APP_VERSION }}
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v4
            -   name: Extract branch name
                id: extract-version
                shell: bash
                run: echo "APP_VERSION=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
    define-version:
        if: github.event.created
        name: Set new version in package.json
        needs: [ collect-version ]
        permissions: write-all
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v4
            -   name: Setup node
                uses: actions/setup-node@v4
                with:
                    node-version: 20
            -   name: Set version
                run: |
                    cd ${{ env.FRONTEND_LOCATION }}
                    npm version ${{ needs.collect-version.outputs.APP_VERSION }} --git-tag-version false -f --allow-same-version true
            -   name: Commit changes
                uses: EndBug/add-and-commit@v9
                with:
                    default_author: github_actions
                    message: Bump version package.json to ${{ needs.collect-version.outputs.APP_VERSION }}
                    add: ${{ env.FRONTEND_LOCATION }}package.json
                    push: origin HEAD:release/${{ needs.collect-version.outputs.APP_VERSION }}
    pull-request-creation:
        needs: [ define-version, collect-version ]
        name: Create Pull Request
        permissions:
            contents: write
            pull-requests: write
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v4
            -   name: create pull request ${{ needs.collect-version.outputs.APP_VERSION }}
                run: gh pr create -B main -H ${{ env.CURRENT_BRANCH }} -d --title ${{ needs.collect-version.outputs.APP_VERSION }} --body 'This is an automated pull request to update the version of the project to ${{ needs.collect-version.outputs.APP_VERSION }}.
                    The version is updated in the package.json file.'
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    tagged-release:
        name: Creating Tag and Release
        runs-on: ubuntu-latest
        if: github.event.pull_request.merged == true
        needs: [ collect-version ]
        permissions:
            contents: write
        steps:
            -   uses: actions/checkout@v4
            -   name: Create Release & Tag
                run: gh release create ${{needs.collect-version.outputs.APP_VERSION}} --generate-notes ${{ !contains(needs.collect-version.outputs.APP_VERSION, 'Beta') || '--prerelease' }} ${{ contains(needs.collect-version.outputs.APP_VERSION, 'Beta') || '--latest' }}     
    