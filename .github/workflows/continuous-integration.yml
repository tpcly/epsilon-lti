name: Continuous integration
on:
  pull_request:
    paths:
      - '**.js'
      - '**.yml'
      - '**.cs'
      - '**.json'
      - '**.csproj'
      - '**.ts'
      - '**.vue'
      - '**.css'

jobs:
  build-backend:
    name: Build .NET solution
    runs-on: ubuntu-20.04
    
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: '6.0.x'
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
  
  build-frontend:
    name: Build frontend
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: Epsilon.Host.Frontend
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'
          cache-dependency-path: 'Epsilon.Host.Frontend/pnpm-lock.yaml'
      - name: Install modules
        run: pnpm install
      - name: Build
        run: pnpm build
  
  lint-frontend:
    name: Lint frontend
    runs-on: ubuntu-20.04
    needs: [ build-frontend ]
    defaults:
      run:
        working-directory: Epsilon.Host.Frontend
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'
          cache-dependency-path: 'Epsilon.Host.Frontend/pnpm-lock.yaml'
      - name: Install modules
        run: pnpm install
      - name: Perform linting
        run: pnpm lint
  
  code-analysis:
    name: Code analysis
    runs-on: ubuntu-20.04
    needs: [ build-backend, build-frontend ]
    permissions:
      contents: write
      pull-requests: write
      checks: write
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - name: 'Qodana Scan'
        uses: JetBrains/qodana-action@v2023.2.1
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
        with:
          args: --user,root
          use-annotations: true
          push-fixes: false
          pr-mode: false